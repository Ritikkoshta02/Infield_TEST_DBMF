# Full cleaned input from user, split into lines
raw_data = """
1 (1,3) (1,11)
2 (2,3) (2,11)
3 (3,3) (3,11)
4 (4,3) (4,11)
5 (5,3) (5,11)
6 (5,4) (5,10)
7 (5,5) (5,9)
8 (5,5) (5,8) (13,4) (13,10)
9 (5,5) (5,6) (5,7) (5,8) (12,4) (12,10)
10 (5,5) (5,6) (5,7) (5,8) (11,4) (11,10)
11 (5,5) (5,6) (5,7) (5,8) (10,4) (10,10)
12 (5,5) (5,6) (5,7) (5,8) (10,5) (10,9)
13 (5,5) (5,6) (5,7) (5,8) (10,6) (10,9)
14 (5,5) (5,6) (5,7) (5,8) (10,6) (10,7) (10,8) (10,9)
15 (5,5) (5,6) (5,7) (5,8) (10,6) (10,7) (10,8) (10,9)
16 (5,5) (5,6) (5,7) (5,8) (10,6) (10,7) (10,8) (10,9)
17 (5,5) (5,6) (5,7) (5,8) (10,6) (10,7) (10,8) (10,9)
18 (5,5) (5,6) (5,7) (5,8) (10,6) (10,7) (10,8) (10,9)
19 (5,5) (5,6) (5,7) (5,8) (10,6) (10,7) (10,8) (10,9)
20 (5,5) (5,6) (5,7) (5,8) (10,6) (10,7) (10,8) (10,9)
21 (5,5) (5,8) (10,6) (10,7) (10,8) (10,9)
22 (5,5) (5,8) (10,6) (10,7) (10,8) (10,9)
23 (5,5) (5,8) (10,6) (10,7) (10,8) (10,9)
24 (5,5) (5,8) (10,6) (10,7) (10,8) (10,9)
25 (5,5) (5,8) (10,6) (10,7) (10,8) (10,9)
26 (5,5) (5,8) (10,6) (10,9)
27 (6,5) (6,8) (9,6) (9,9)
28 (6,5) (6,8) (8,6) (8,9)
29 (6,6) (6,9) (8,6) (8,9)
30 (6,1) (6,6) (6,9) (6,13) (8,1) (8,6) (8,9) (8,13)
31 (6,2) (6,6) (6,9) (6,12) (8,2) (8,6) (8,9) (8,12)
32 (6,3) (6,6) (6,9) (6,12) (8,3) (8,6) (8,9) (8,12)
33 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
34 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
35 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
36 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
37 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
38 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
39 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
40 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
41 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
42 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
43 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
44 (6,3) (6,4) (6,5) (6,6) (6,9) (6,10) (6,11) (6,12) (8,3) (8,4) (8,5) (8,6) (8,9) (8,10) (8,11) (8,12)
45 (6,3) (6,6) (6,9) (6,12) (8,3) (8,6) (8,9) (8,12)
46 (6,3) (5,6) (5,9) (6,12) (8,3) (9,6) (9,9) (8,12)
47 (6,3) (4,6) (4,9) (6,12) (8,3) (10,6) (10,9) (8,12)
48 (6,3) (3,6) (3,9) (6,12) (8,3) (11,6) (11,9) (8,12)
49 (6,3) (2,6) (2,9) (6,12) (8,3) (12,6) (12,9) (8,12)
50 (6,3) (1,6) (1,9) (6,12) (8,3) (13,6) (13,9) (8,12)
51 (6,3) (6,12) (8,3) (8,12)
52 (5,3) (5,12) (9,3) (9,12)
53 (4,3) (4,12) (10,3) (10,12)
54 (4,4) (4,11) (10,4) (10,11)
55 (4,5) (4,10) (10,5) (10,10)
56 (4,6) (4,9) (10,6) (10,9)
57 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
58 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
59 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
60 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
61 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
62 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
63 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
64 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
65 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
66 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
67 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
68 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
69 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
70 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
71 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
72 (4,6) (4,7) (4,8) (4,9) (10,6) (10,7) (10,8) (10,9)
73 (4,6) (10,6) (4,9) (10,9)
74 (5,6) (9,6) (5,9) (9,9)
75 (6,6) (9,6) (5,9) (8,9)
76 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
77 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
78 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
79 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
80 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
81 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
82 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
83 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
84 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
85 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
86 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
87 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
88 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
89 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
90 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
91 (6,6) (7,6) (8,6) (9,6) (5,9) (6,9) (7,9) (8,9)
92 (6,6) (5,9) (9,6) (8,9)
93 (5,6) (5,9) (9,6) (9,9)
94 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
95 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
96 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
97 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
98 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
99 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
100 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
101 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
102 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
103 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
104 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
105 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
106 (5,6) (5,7) (5,8) (5,9) (9,6) (9,7) (9,8) (9,9)
107 (5,6) (5,9) (9,6) (9,9)
108 (6,6) (5,9) (8,6) (9,9)
109 (7,6) (5,9) (7,6) (9,9)
110 (8,6) (5,9) (6,6) (9,9)
111 (9,6) (5,9) (5,6) (9,9)
112 (10,6) (5,9) (4,6) (9,9)
113 (11,6) (5,9) (3,6) (9,9)
114 (12,6) (5,9) (2,6) (9,9)
115 (13,6) (5,9) (1,6) (9,9)
116 (5,9) (9,9) (5,1) (9,1)
117 (5,8) (9,8) (5,2) (9,2)
118 (5,7) (9,7) (5,3) (9,3)
119 (5,3) (5,6) (9,3) (9,6)
120 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
121 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
122 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
123 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
124 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
125 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
126 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
127 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
128 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
129 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
130 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
131 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
132 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
133 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
134 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
135 (5,3) (5,4) (5,5) (5,6) (9,3) (9,4) (9,5) (9,6)
136 (5,3) (5,6) (9,3) (9,6)
137 (6,3) (5,6) (8,3) (9,6)
138 (7,3) (5,6) (7,3) (9,6)
139 (8,3) (5,6) (6,3) (9,6)
140 (9,3) (5,6) (5,3) (9,6)
141 (10,3) (5,6) (4,3) (9,6)
142 (11,3) (5,6) (3,3) (9,6)
143 (12,3) (5,6) (2,3) (9,6)
144 (13,3) (5,6) (1,3) (9,6)
145 (5,6) (9,6)
146 (6,6) (7,6)
147 (7,6) (6,6)
148 (8,6) (5,6)
149 (9,6) (4,6)
150 (10,6) (3,6)
151 (11,6) (2,6)
152 (11,6) (1,6)
153 (11,6)
154 (12,6)
155 (13,6)
""".strip().splitlines()

# Parse into OBSTICALS list of lists
obsticals = []
for line in raw_data:
    parts = line.strip().split()
    coords = [eval(p) for p in parts[1:]]  # safely convert (a,b) to tuples
    obsticals.append(coords)
for abs in obsticals:
    print(abs, end=',\n')