import matplotlib.pyplot as plt
import matplotlib.patches as patches
import imageio
import os

# ------------------------ ENVIRONMENT SETUP ------------------------ #

Name = "Q_PCR_15x15"
GRID_DIM_R = 18
GRID_DIM_C = 18
Start = (17, 1)

OBSTICALS = [
    [], 
[(3, 1), (1, 2), (1, 5), (1, 11), (1, 14), (3, 15)],
    [(4, 1), (1, 2), (2, 5), (2, 11), (1, 14), (4, 15)],
    [(5, 1), (2, 2), (3, 5), (3, 11), (2, 14), (5, 15)],
    [(5, 2), (2, 2), (3, 6), (3, 10), (2, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (5, 14)],
    [(6, 2), (2, 3), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (6, 14)],
    [(7, 2), (2, 4), (4, 7), (4, 10), (2, 14), (7, 14)],
    [(7, 1), (3, 4), (5, 7), (5, 10), (2, 14), (7, 15)],
    [(3, 5), (6, 7), (5, 11), (2, 14)],
    [(1, 8), (3, 6), (7, 7), (5, 12), (2, 14)],
    [(1, 9), (3, 7), (7, 6), (5, 13), (2, 14)],
    [(1, 10), (3, 7), (7, 5), (5, 14), (2, 14)],
    [(2, 10), (3, 7), (7, 4), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 7), (7, 3), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (7, 2), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (7, 1), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (5, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (5, 14), (2, 14)],
    [(3, 10), (3, 7), (6, 14), (2, 14)],
    [(3, 10), (3, 7), (7, 14), (2, 14)],
    [(4, 10), (4, 7), (7, 15), (2, 14)],
    [(5, 10), (5, 7), (2, 14)],
    [(5, 11), (6, 7), (2, 14)],
    [(5, 12), (7, 7), (2, 14)],
    [(5, 13), (7, 6), (2, 14)],
    [(5, 14), (7, 5), (2, 14)],
    [(7, 4), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(1, 11), (7, 3), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(1, 12), (7, 2), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(2, 12), (7, 1), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(3, 12), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(4, 12), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 12), (2, 14), (5, 14)],
    [(5, 12), (2, 14), (5, 14)],
    [(5, 12), (2, 14), (6, 14)],
    [(5, 12), (2, 14), (7, 14)],
    [(5, 13), (2, 14), (7, 15)],
    [(5, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (2, 14)],
    [(5, 14), (2, 14)],
    [(6, 14), (3, 14)],
    [(7, 14), (4, 14)],
    [(8, 14), (5, 14)],
    [(8, 13), (6, 14)],
    [(6, 15)],
    [(7, 15)],
     [(11, 1), (9, 2), (9, 5), (9, 11), (9, 14), (11, 15)],
    [(12, 1), (9, 2), (10, 5), (10, 11), (9, 14), (12, 15)],
    [(13, 1), (10, 2), (11, 5), (11, 11), (10, 14), (13, 15)],
    [(13, 2), (10, 2), (11, 6), (11, 10), (10, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (12, 2), (11, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 2), (10, 2), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (13, 14)],
    [(14, 2), (10, 3), (11, 7), (11, 8), (11, 9), (11, 10), (10, 14), (14, 14)],
    [(15, 2), (10, 4), (12, 7), (12, 10), (10, 14), (15, 14)],
    [(15, 1), (11, 4), (13, 7), (13, 10), (10, 14), (15, 15)],
    [(11, 5), (14, 7), (13, 11), (10, 14)],
    [(9, 8), (11, 6), (15, 7), (13, 12), (10, 14)],
    [(9, 9), (11, 7), (15, 6), (13, 13), (10, 14)],
    [(9, 10), (11, 7), (15, 5), (13, 14), (10, 14)],
    [(10, 10), (11, 7), (15, 4), (13, 14), (12, 14), (11, 14), (10, 14)],
    [(11, 10), (11, 7), (15, 3), (13, 14), (12, 14), (11, 14), (10, 14)],
    [(11, 10), (11, 9), (11, 8), (11, 7), (15, 2), (13, 14), (12, 14), (11, 14), (10, 14)],
    [(11, 10), (11, 9), (11, 8), (11, 7), (15, 1), (13, 14), (12, 14), (11, 14), (10, 14)],
    [(11, 10), (11, 9), (11, 8), (11, 7), (13, 14), (12, 14), (11, 14), (10, 14)],
    [(11, 10), (11, 9), (11, 8), (11, 7), (13, 14), (12, 14), (11, 14), (10, 14)],
    [(11, 10), (11, 9), (11, 8), (11, 7), (13, 14), (10, 14)],
    [(11, 10), (11, 9), (11, 8), (11, 7), (13, 14), (10, 14)],
    [(11, 10), (11, 7), (14, 14), (10, 14)],
    [(11, 10), (11, 7), (15, 14), (10, 14)],
    [(12, 10), (12, 7), (15, 15), (10, 14)],
    [(13, 10), (13, 7), (10, 14)],
    [(13, 11), (14, 7), (10, 14)],
    [(13, 12), (15, 7), (10, 14)],
    [(13, 13), (15, 6), (10, 14)],
    [(13, 14), (15, 5), (10, 14)],
    [(15, 4), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(9, 11), (15, 3), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(9, 12), (15, 2), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(10, 12), (15, 1), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(11, 12), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(12, 12), (10, 14), (11, 14), (12, 14), (13, 14)],
    [(13, 12), (10, 14), (13, 14)],
    [(13, 12), (10, 14), (13, 14)],
    [(13, 12), (10, 14), (14, 14)],
    [(13, 12), (10, 14), (15, 14)],
    [(13, 13), (10, 14), (15, 15)],
    [(13, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (12, 14), (11, 14), (10, 14)],
    [(13, 14), (10, 14)],
    [(13, 14), (10, 14)],
    [(14, 14), (11, 14)],
    [(15, 14), (12, 14)],
    [(16, 14), (13, 14)],
    [(16, 13), (14, 14)],
    [(14, 15)],
    [(15, 15)],
    [(3, 1), (1, 2), (1, 5), (1, 11), (1, 14), (3, 15)],
    [(4, 1), (1, 2), (2, 5), (2, 11), (1, 14), (4, 15)],
    [(5, 1), (2, 2), (3, 5), (3, 11), (2, 14), (5, 15)],
    [(5, 2), (2, 2), (3, 6), (3, 10), (2, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (4, 2), (3, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 2), (2, 2), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (5, 14)],
    [(6, 2), (2, 3), (3, 7), (3, 8), (3, 9), (3, 10), (2, 14), (6, 14)],
    [(7, 2), (2, 4), (4, 7), (4, 10), (2, 14), (7, 14)],
    [(7, 1), (3, 4), (5, 7), (5, 10), (2, 14), (7, 15)],
    [(3, 5), (6, 7), (5, 11), (2, 14)],
    [(1, 8), (3, 6), (7, 7), (5, 12), (2, 14)],
    [(1, 9), (3, 7), (7, 6), (5, 13), (2, 14)],
    [(1, 10), (3, 7), (7, 5), (5, 14), (2, 14)],
    [(2, 10), (3, 7), (7, 4), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 7), (7, 3), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (7, 2), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (7, 1), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (5, 14), (4, 14), (3, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (5, 14), (2, 14)],
    [(3, 10), (3, 9), (3, 8), (3, 7), (5, 14), (2, 14)],
    [(3, 10), (3, 7), (6, 14), (2, 14)],
    [(3, 10), (3, 7), (7, 14), (2, 14)],
    [(4, 10), (4, 7), (7, 15), (2, 14)],
    [(5, 10), (5, 7), (2, 14)],
    [(5, 11), (6, 7), (2, 14)],
    [(5, 12), (7, 7), (2, 14)],
    [(5, 13), (7, 6), (2, 14)],
    [(5, 14), (7, 5), (2, 14)],
    [(7, 4), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(1, 11), (7, 3), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(1, 12), (7, 2), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(2, 12), (7, 1), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(3, 12), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(4, 12), (2, 14), (3, 14), (4, 14), (5, 14)],
    [(5, 12), (2, 14), (5, 14)],
    [(5, 12), (2, 14), (5, 14)],
    [(5, 12), (2, 14), (6, 14)],
    [(5, 12), (2, 14), (7, 14)],
    [(5, 13), (2, 14), (7, 15)],
    [(5, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (4, 14), (3, 14), (2, 14)],
    [(5, 14), (2, 14)],
    [(5, 14), (2, 14)],
    [(6, 14), (3, 14)],
    [(7, 14), (4, 14)],
    [(8, 14), (5, 14)],
    [(8, 13), (6, 14)],
    [(6, 15)],
    [(7, 15)],
    [(7, 15)],
    [],
]

FOOTPRINT = [
 ((2,2),(2,3)),
        ((2,3),(2,4)),
        ((2,4),(2,5)),
        ((3,1),(3,2)),
        ((3,4),(3,5)),
        ((3,5),(3,6)),
        ((3,6),(3,7)),
        ((4,1),(4,2)),
        ((5,1),(5,2)),
        ((7,1),(7,2)),
        ((7,2),(7,3)),
        ((7,3),(7,4)),
        ((7,4),(7,5)),
        ((7,5),(7,6)),
        ((7,6),(7,7)),
        ((3,1),(4,1)),
        ((4,1),(5,1)),
        ((1,2),(2,2)),
        ((2,2),(3,2)),
        ((3,2),(4,2)),
        ((4,2),(5,2)),
        ((5,2),(6,2)),
        ((6,2),(7,2)),
        ((2,4),(3,4)),
        ((1,5),(2,5)),
        ((2,5),(3,5)),
        ((3,7),(4,7)),
        ((4,7),(5,7)),
        ((5,7),(6,7)),
        ((6,7),(7,7)),
        ((1,8),(1,9)),
        ((1,9),(1,10)),
        ((1,10),(1,11)),
        ((1,11),(1,12)),
        ((3,7),(3,8)), 
        ((3,8),(3,9)),
        ((3,9),(3,10)),
        ((3,10),(3,11)),
        ((3,11),(3,12)),
        ((3,14),(3,15)),
        ((5,10),(5,11)),
        ((5,11),(5,12)),
        ((5,12),(5,13)),
        ((5,13),(5,14)),
        ((6,14),(6,15)),
        ((7,14),(7,15)),
        ((8,13),(8,14)),
        ((1,10),(2,10)),
        ((2,10),(3,10)),
        ((3,10),(4,10)),
        ((4,10),(5,10)),
        ((1,12),(2,12)),
        ((2,12),(3,12)),
        ((3,12),(4,12)),
        ((4,12),(5,12)),
        ((1,14),(2,14)),
        ((2,14),(3,14)),
        ((3,14),(4,14)),
        ((4,14),(5,14)),
        ((5,14),(6,14)),
        ((6,14),(7,14)),
        ((7,14),(8,14)),
        ((6,15),(7,15)),
        ((10,2),(10,3)),
((10,3),(10,4)),
((10,4),(10,5)),
((11,1),(11,2)),
((11,4),(11,5)),
((11,5),(11,6)),
((11,6),(11,7)),
((12,1),(12,2)),
((13,1),(13,2)),
((15,1),(15,2)),
((15,2),(15,3)),
((15,3),(15,4)),
((15,4),(15,5)),
((15,5),(15,6)),
((15,6),(15,7)),
((11,1),(12,1)),
((12,1),(13,1)),
((9,2),(10,2)),
((10,2),(11,2)),
((11,2),(12,2)),
((12,2),(13,2)),
((13,2),(14,2)),
((14,2),(15,2)),
((10,4),(11,4)),
((9,5),(10,5)),
((10,5),(11,5)),
((11,7),(12,7)),
((12,7),(13,7)),
((13,7),(14,7)),
((14,7),(15,7)),
((9,8),(9,9)),
((9,9),(9,10)),
((9,10),(9,11)),
((9,11),(9,12)),
((11,7),(11,8)),
((11,8),(11,9)),
((11,9),(11,10)),
((11,10),(11,11)),
((11,11),(11,12)),
((11,14),(11,15)),
((13,10),(13,11)),
((13,11),(13,12)),
((13,12),(13,13)),
((13,13),(13,14)),
((14,14),(14,15)),
((15,14),(15,15)),
((16,13),(16,14)),
((9,10),(10,10)),
((10,10),(11,10)),
((11,10),(12,10)),
((12,10),(13,10)),
((9,12),(10,12)),
((10,12),(11,12)),
((11,12),(12,12)),
((12,12),(13,12)),
((9,14),(10,14)),
((10,14),(11,14)),
((11,14),(12,14)),
((12,14),(13,14)),
((13,14),(14,14)),
((14,14),(15,14)),
((15,14),(16,14)),
((14,15),(15,15))
]

# ------------------------ RENDER CLASS ------------------------ #

class Render:
    def __init__(self, grid_size=(GRID_DIM_R, GRID_DIM_C), footprints=None, obstacles=None):
        self.grid_size = grid_size
        self.footprints = footprints
        self.obstacles = obstacles
        self.frames = []
        self.path = []
        self.output_dir = f"{Name}/output_frames"
        if not os.path.exists(self.output_dir):
            os.makedirs(self.output_dir)
        self.start_position = None

    def add_frame(self, agent_position, path, time_step):
        if len(self.path) == 0:
            self.start_position = agent_position

        self.path.append(agent_position)
        fig, ax = plt.subplots()
        ax.set_xlim(0, self.grid_size[1])
        ax.set_ylim(0, self.grid_size[0])
        ax.set_aspect('equal')

        for i in range(self.grid_size[0]):
            for j in range(self.grid_size[1]):
                if (i == 0 or i == self.grid_size[0] - 1 or j == 0 or j == self.grid_size[1] - 1) and (i, j) != self.start_position:
                    facecolor = 'gray'
                else:
                    facecolor = 'white'
                ax.add_patch(patches.Rectangle((j, i), 1, 1, edgecolor='black', facecolor=facecolor))

        if self.footprints:
            for (p1, p2) in self.footprints:
                for p in [p1, p2]:
                    ax.add_patch(patches.Rectangle((p[1], p[0]), 1, 1, edgecolor='black', facecolor='lightskyblue'))

        if time_step < len(self.obstacles):
            for ob in self.obstacles[time_step]:
                ax.add_patch(patches.Rectangle((ob[1], ob[0]), 1, 1, edgecolor='black', facecolor='green'))
                plt.text(ob[1] + 0.5, ob[0] + 0.5, str(time_step), fontsize=8, ha='center', va='center', color='white')

        if len(self.path) > 1:
            path_x = [p[1] + 0.5 for p in self.path]
            path_y = [p[0] + 0.5 for p in self.path]
            ax.plot(path_x, path_y, color='red', linestyle='-', linewidth=2, marker='o')

        ax.add_patch(patches.Rectangle((self.start_position[1], self.start_position[0]), 1, 1, edgecolor='black', facecolor='royalblue'))

        if agent_position != self.start_position:
            ax.add_patch(patches.Rectangle((agent_position[1], agent_position[0]), 1, 1, edgecolor='black', facecolor='blue'))
            plt.text(agent_position[1] + 0.5, agent_position[0] + 0.95, str(time_step), fontsize=8, ha='center', va='top', color='white')

        plt.text(self.grid_size[1] / 2, self.grid_size[0] + 0.5, f'Frame: {len(self.frames) + 1}', fontsize=12, ha='center', va='center', color='black')
        plt.axis('off')

        frame_path = os.path.join(self.output_dir, f'frame_{len(self.frames)+1}.png')
        plt.savefig(frame_path, bbox_inches='tight')
        plt.close()

        frame_image = imageio.imread(frame_path)
        self.frames.append(frame_image)
        print(f"Added frame {len(self.frames)}")

    def save_gif(self, filename='agent_path.gif'):
        if not self.frames:
            print("No frames to save!")
        else:
            gif_path = os.path.join(self.output_dir, filename)
            imageio.mimsave(gif_path, self.frames, duration=1000.0)
            print(f"GIF saved as {filename}")

    def reset(self):
        self.frames = []
        self.path = []
        self.start_position = None

# ------------------------ MOVEMENT LOGIC ------------------------ #

def render_from_string(action_string, start, obstacles, footprints, grid_size):
    direction_map = {
        '0': (1, 0),   # up
        '1': (-1, 0),  # down
        '2': (0, -1),  # left
        '3': (0, 1),   # right
        '4': (0, 0),   # no movement
    }

    r = Render(grid_size=grid_size, footprints=footprints, obstacles=obstacles)
    position = start

    min_r, max_r = 1, grid_size[0] - 2
    min_c, max_c = 1, grid_size[1] - 2

    r.add_frame(position, path=None, time_step=0)  # Start frame (before any move)

    for t, a in enumerate(action_string, start=1):
        move = direction_map.get(a, (0, 0))
        new_pos = (position[0] + move[0], position[1] + move[1])

        # Agent is still on boundary
        if not (min_r <= position[0] <= max_r and min_c <= position[1] <= max_c):
            if min_r <= new_pos[0] <= max_r and min_c <= new_pos[1] <= max_c:
                position = new_pos  # allow entry
        else:
            if min_r <= new_pos[0] <= max_r and min_c <= new_pos[1] <= max_c:
                position = new_pos  # allow move inside grid

        r.add_frame(position, path=None, time_step=t)

    r.save_gif("agent_path.gif")

# ------------------------ MAIN ------------------------ #

if __name__ == "__main__":
    action_string = "11311211313330213033333141344300003304302011111321121313202240201003331331141212122114242113300002211223322222122200000333331111222121200213400210000423333440400022141203402023013000322333331111311233300324003332044003311"
    render_from_string(action_string, Start, OBSTICALS, FOOTPRINT, (GRID_DIM_R, GRID_DIM_C))
